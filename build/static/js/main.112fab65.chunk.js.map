{"version":3,"sources":["actions/index.js","utils/index.js","reducers/index.js","components/Modal.js","components/Planets.js","components/Login.js","App.js","utils/apiHelper.js","sagas/index.js","serviceWorker.js","index.js"],"names":["AppActions","prefix","actionTypeList","actionTypesObject","forEach","item","concat","createActionTypes","onLogin","data","type","LOGIN_CLICKED","payload","Object","objectSpread","postLogin","POST_LOGIN","reducer","state","arguments","length","undefined","action","console","log","loading","ModalInfo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","show","setState","hideInfo","planet","react_default","a","createElement","simple_modal_default","className","containerClassName","closeOnOuterClick","onClose","close","bind","name","onClick","keys","map","key","index","replace","title","React","Component","Planets","planets","searchParam","filtered","currPage","searching","showInfo","event","_ref","target","value","toLowerCase","self","param","searchAPlanet","then","res","alert","currentTarget","dir","inc","page","parseInt","_this2","Modal_ModalInfo","aria-hidden","logouot","placeholder","onKeyUp","filterList","onBlur","lessItems","val","i","fontSize","Number","diameter","boundItemClick","itemClicked","href","style","paginate","Login","onSubmit","preventDefault","_Array$from$map","Array","from","elem","_Array$from$map2","slicedToArray","username","password","dispatch","id","required","connect","store","userData","newHistory","createBrowserHistory","App","react_router","history","exact","path","component","axiosInstance","axios","create","baseURL","timeout","headers","Accept","Content-Type","baseAPIResource","get","slug","checkLogin","actionWatcher","rootSaga","_action$payload","response","results","regenerator_default","wrap","_context","prev","next","sent","filter","user","birth_year","put","push","t0","stop","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","Boolean","window","location","hostname","match","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","logger","run","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.112fab65.chunk.js","sourcesContent":["import { createActionTypes } from \"../utils\";\n\nexport const AppActions = createActionTypes(\"login\", [\n  \"LOGIN_CLICKED\",\n  \"POST_LOGIN\"\n]);\n\nexport const onLogin = (data) => ({\n  type: AppActions.LOGIN_CLICKED,\n  payload: {\n    ...data\n  }\n});\n\nexport const postLogin = (data) => ({\n  type: AppActions.POST_LOGIN,\n  payload: {\n    ...data\n  }\n});","export const createActionTypes = (prefix, actionTypeList) => {\n    const actionTypesObject = {};\n\n    actionTypeList.forEach((item) => {\n        actionTypesObject[item] = `${prefix}/${item}`;\n    });\n\n    return actionTypesObject;\n};","import { AppActions } from \"../actions\";\n\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n      case AppActions.POST_LOGIN:\n      console.log(\"payload:\", action);\n        return { ...state, loading: true };\n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;","import Modal, {closeStyle} from 'simple-react-modal'\nimport React, { Component } from 'react';\n\nexport default class ModalInfo extends React.Component{\n \n  constructor(props){\n    super(props)\n    this.state = {\n        show:true\n    }\n  }\n  show(){\n    this.setState({show: true})\n  }\n \n  close(){\n    this.props.hideInfo()\n  }\n \n \n  render(){\n      let planet = this.props.planet;\n    return (\n      <div>\n        <Modal\n            className=\"modal-class\" \n            containerClassName=\"test\"\n            closeOnOuterClick={true}\n            show={this.state.show}\n            onClose={this.close.bind(this)}>\n             <div className=\"modal-dialog\">\n\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4>{planet.name}</h4>\n                            <button type=\"button\" className=\"close\" onClick={this.close.bind(this)}>&times;</button>\n                        </div>\n                        <div className=\"modal-body\">\n                           {\n                               Object.keys(planet).map(function(key,index) {\n                                    return <p key={index}><span className=\"planet-info-key\">{key.replace(/_/g,' ')}</span><span className=\"planet-info-value\" title={planet[key]}>{planet[key]}</span></p>\n                                })\n                           }\n                        </div>\n                    </div>\n\n             </div>\n        \n        </Modal>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport  './styles.css';\nimport { withRouter } from 'react-router';\n// import {checkStatus} from '../auth';\nimport ModalInfo from './Modal';\n// import { debounce } from \"../utils/debounce\"\nclass Planets extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            planets: [{name:'No Data Found'}],\n            searchParam: '',\n            filtered: this.props.data || [{ name: 'No Data Found' }],\n            currPage: 1,\n            searching:'no'\n        }\n    }\n    componentDidMount(){\n        this.setState({\n            planets: this.props.data,\n            filtered: this.props.data || [],\n            showInfo:false\n        });\n    }\n    shouldComponentUpdate(){\n      return true;\n    }\n    filterList(event){\n        // var updatedList = this.props.data.filter(function(item){\n        //     return item.name.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n        // });\n        //this.setState({filtered:event.currentTarget.value?updatedList:[]});\n      let [self, param] = [this, event.target.value.toLowerCase()];\n      self.setState(\n        {\n          searching:'yes'\n        }\n      );\n      this.props.searchAPlanet(param)\n\n      // self.setState({\n      //   filtered: this.props.data,\n      //   searchParam: param\n      // });\n      .then(function(res){\n        self.setState({ \n                  filtered: self.props.data ,\n                  searchParam: param,\n                  searching: 'no'\n                });\n      },function(){\n        alert('No item found!!');\n      });\n    }\n    lessItems(event){\n       if(!event.currentTarget.value)this.setState({filtered:[]});\n    }\n    logouot(){\n        // checkStatus.setLoggedIn = false;\n        // this.props.history.push(\"/\");\n    }\n    itemClicked(planet){\n        this.setState({\n            showInfo: true,\n            planet: planet\n        });\n    }\n    hideInfo(){\n        this.setState({\n            showInfo: false\n        });\n    }\n\n    paginate(dir){\n      let self = this;\n      let inc = ( dir == 'next' )?1:-1;\n      let page = parseInt(self.state.currPage, 0) + inc;\n      self.setState(\n        {\n          searching: 'yes'\n        }\n      );\n      this.props.searchAPlanet(this.state.searchParam + '&page=' + page).then(function () {\n        self.setState({\n          filtered: self.props.data,\n          currPage: page,\n          searching: 'no'\n        });\n      }, function () {\n        alert('No item found!!');\n      });\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                {this.state.showInfo?<ModalInfo planet={this.state.planet} hideInfo={this.hideInfo.bind(this)}/>:''}\n                <div className=\"row\">\n                        <div className=\"col-md-12 userinfo\">\n                            Welcome: <i className=\"fa fa-sign-out\" aria-hidden=\"true\" onClick={this.logouot.bind(this)}></i>\n                        </div>\n                </div>        \n                <div className=\"row\">\n                    <div className=\"col-md-10 center\">\n                        <input type=\"text\" className=\"form-control\"\n                         placeholder={this.props.data && this.props.data.length>0?'Search':'Loading...'} \n                         onKeyUp={this.filterList.bind(this)} onBlur={this.lessItems.bind(this)}/>\n                    </div>\n                 </div>\n                     <div className=\"row\">\n                     <div className=\"col-md-10 center planet-list\">\n                         <div className={`list-group searching-${this.state.searching}`}>\n                             {this.state.filtered.length>0 ? \n                                 (this.state.filtered.map((val,i)=>{\n                                     let fontSize = {\n                                         fontSize:(50+Number(val.diameter)/1e3)+'px'\n                                     };\n                                     let boundItemClick = this.itemClicked.bind(this, val);\n                                     return <a href=\"#\" className=\"list-group-item\" key={i}\n                                       style={fontSize} onClick={boundItemClick}>\n                                        {val.name} <i className=\"fa fa-globe\" aria-hidden=\"true\">\n                                        </i></a>;\n                                 })\n                                 ):''}\n                         </div>\n                         <ul className=\"pagination\">\n                            <li><a href=\"#\" onClick={this.paginate.bind(this,'prev')}>Prev</a></li>\n                            <li><a href=\"#\" onClick={this.paginate.bind(this, 'next')}>Next</a></li>\n                         </ul>\n                     </div>\n                     \n                  </div>\n            </div>\n        );\n    }\n}\nexport default Planets;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from \"react-redux\";\nimport \"./styles.css\";\nimport { onLogin } from \"../actions\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        let [username, password] = Array.from(event.target).map(elem => elem.value);\n        const { dispatch } = this.props;\n        dispatch(onLogin({username, password}));\n        console.log(\"username\", username);\n    };\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-3 login-panel\">\n                    <form onSubmit={this.onSubmit.bind(this)}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"Enter username\" name=\"email\" required />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\" required />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-default login-btn\" >Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default connect((store) => {\n    return {\n        userData: {}//store.loginReducer.userData\n    }\n})(Login);","import React, { Component } from 'react';\nimport Login from './components/Planets';\nimport Planets from './components/Login';\nimport { Router, Route, Switch, Redirect } from 'react-router';\nimport { createBrowserHistory } from 'history';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import {checkStatus} from '../auth'\nconst newHistory = createBrowserHistory();\n\nexport default class App extends Component {\n\n  validateLogin() {\n    return false;//checkStatus.setLoggedIn?<Main/>:<Redirect to='/'/>\n  }\n\n  render() {\n    return (\n      <Router history={newHistory}>\n          <Route exact path=\"/login\" component={Login} />\n          {/* <Route exact path=\"/planets\" component={Planets} render={this.validateLogin} /> */}\n      </Router>\n    );\n  }\n}\n","import axios from \"axios\";\n\nconst baseAPIResourceURL = \"https://swapi.co/api/\";\n\nconst headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n};\n\n\nconst axiosInstance = axios.create({\n    baseURL: baseAPIResourceURL,\n    timeout: 1800000,\n    headers\n});\n\nexport const baseAPIResource = {\n    get: (slug) => {\n        console.log(\"baseAPIResourceURL\", baseAPIResourceURL)\n        debugger;\n        return axiosInstance.get(slug);\n    }\n};","import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { AppActions, postLogin } from \"../actions\";\nimport { baseAPIResource } from \"../utils/apiHelper\";\nimport { createBrowserHistory } from 'history';\n\nconst newHistory = createBrowserHistory();\n\n// function* fetchNews() {\n\n//   const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=c39a26d9c12f48dba2a5c00e35684ecc')\n//     .then(response => response.json());\n\n//   yield put({ type: \"NEWS_RECEIVED\", json: json.articles || [{ error: json.message }] });\n// }\n\nfunction* checkLogin(action) {\n  try {\n    const { username, password } = action.payload;\n    const response = yield call(baseAPIResource.get, `people/?search=${username}`);\n    const results = response.data.results;\n    const userData = results.length ? results.filter(user => (user.birth_year == password)) : [];\n    const isValidUser = userData.length;\n    \n    if(!isValidUser) {\n      alert(\"Invalid credentials\");\n    } else {\n      yield put(postLogin(userData));\n\n      yield call(newHistory.push, \"/planets\");\n    }\n    debugger;\n  } catch (e) {\n    console.log(\"Login error: \", e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(AppActions.LOGIN_CLICKED, checkLogin)\n}\n\n\nexport default function* rootSaga() {\n  yield all([\n    actionWatcher(),\n  ]);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport createSagaMiddleware from 'redux-saga';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport reducer from './reducers';\nimport App from './App';\nimport rootSaga from './sagas';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware, logger),\n);\n\nsagaMiddleware.run(rootSaga);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}