{"ast":null,"code":"var _jsxFileName = \"/Users/sharvankumar/brainstorm/swapi/swapi/src/components/Planets.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport { connect } from \"react-redux\";\nimport ModalInfo from './Modal';\nimport { debounce, checkLoginStatus } from \"../utils\";\nimport { onLogout, getPlanets } from \"../actions\";\n\nclass Planets extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = () => {\n      const dispatch = this.props.dispatch;\n      dispatch(onLogout());\n    };\n\n    const userData = props.userData,\n          planetsData = props.planetsData;\n    this.state = {\n      filtered: planetsData || [{\n        name: 'No Data Found'\n      }],\n      name: userData ? userData[0].name : \"Guest\"\n    };\n  }\n\n  filterList(param) {\n    const _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          history = _this$props.history;\n    dispatch(getPlanets({\n      param,\n      history\n    }));\n  }\n\n  lessItems(event) {// if (!event.currentTarget.value) this.setState({ filtered: [] });\n  }\n\n  itemClicked(planet) {\n    this.setState({\n      showInfo: true,\n      planet: planet\n    });\n  }\n\n  hideInfo() {\n    this.setState({\n      showInfo: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          planet = _this$state.planet,\n          showInfo = _this$state.showInfo,\n          filtered = _this$state.filtered;\n    const loginSuccess = this.props.loginSuccess;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, showInfo ? React.createElement(ModalInfo, {\n      planet: planet,\n      hideInfo: this.hideInfo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : '', React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 userinfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Welcome: \", name, \" \", loginSuccess || JSON.parse(sessionStorage.getItem(\"isLoggedIn\")) ? React.createElement(\"i\", {\n      className: \"fa fa-sign-out\",\n      \"aria-hidden\": \"true\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Logout \") : \"\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search planets here\",\n      onChange: evt => {\n        const val = evt.target.value;\n        debounce(this.filterList.bind(this, val), 2000)();\n      },\n      onBlur: this.lessItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 center planet-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, filtered ? Object.values(filtered).map((val, i) => {\n      let fontSize = {\n        fontSize: 50 + Number(val.diameter) / 1e3 + 'px'\n      };\n      let boundItemClick = this.itemClicked.bind(this, val);\n      return React.createElement(\"a\", {\n        href: \"#\",\n        className: \"list-group-item\",\n        key: i,\n        style: fontSize,\n        onClick: boundItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, val.name, \" \", React.createElement(\"i\", {\n        className: \"fa fa-globe\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }) : ''))));\n  }\n\n}\n\nPlanets.getDerivedStateFromProps = (props, state) => {\n  const history = props.history,\n        logoutSuccess = props.logoutSuccess,\n        planetsData = props.planetsData,\n        userData = props.userData;\n\n  if (checkLoginStatus() && !userData) {\n    let userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    return {\n      name: userData ? userData[0].name : \"\",\n      filtered: planetsData\n    };\n  }\n\n  if (logoutSuccess) {\n    history.push(\"/login\");\n  }\n\n  return {\n    filtered: planetsData\n  };\n};\n\nexport default connect(state => {\n  // const userData = state.get\n  return {\n    userData: state.userData,\n    loginSuccess: state.loginSuccess,\n    logoutSuccess: state.logoutSuccess,\n    planetsData: state.planetsData\n  };\n})(Planets);","map":{"version":3,"sources":["/Users/sharvankumar/brainstorm/swapi/swapi/src/components/Planets.js"],"names":["React","Component","connect","ModalInfo","debounce","checkLoginStatus","onLogout","getPlanets","Planets","constructor","props","logout","dispatch","userData","planetsData","state","filtered","name","filterList","param","history","lessItems","event","itemClicked","planet","setState","showInfo","hideInfo","render","loginSuccess","bind","JSON","parse","sessionStorage","getItem","evt","val","target","value","Object","values","map","i","fontSize","Number","diameter","boundItemClick","getDerivedStateFromProps","logoutSuccess","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport { connect } from \"react-redux\";\nimport ModalInfo from './Modal';\nimport { debounce, checkLoginStatus } from \"../utils\"\nimport { onLogout, getPlanets } from \"../actions\";\n\nclass Planets extends Component {\n\n    constructor(props) {\n        super(props);\n        const { userData, planetsData } = props;\n        this.state = {\n            filtered: planetsData || [{ name: 'No Data Found' }],\n            name: userData ? userData[0].name : \"Guest\"\n        }\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        const { history, logoutSuccess, planetsData, userData } = props;\n        if (checkLoginStatus() && !userData) {\n           let  userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n            return {\n                name: userData ? userData[0].name : \"\",\n                filtered: planetsData\n            };\n        }\n\n        if( logoutSuccess ) {\n            history.push(\"/login\");\n        }\n\n\n        return {\n            filtered: planetsData\n        };\n    };\n\n    filterList(param) {\n        const { dispatch, history } = this.props;\n        dispatch(getPlanets({ param, history }));\n    }\n\n    lessItems(event) {\n        // if (!event.currentTarget.value) this.setState({ filtered: [] });\n    }\n\n    logout = () => {\n        const { dispatch } = this.props;\n        dispatch(onLogout());\n    };\n\n    itemClicked(planet) {\n        this.setState({\n            showInfo: true,\n            planet: planet\n        });\n    }\n\n    hideInfo() {\n        this.setState({\n            showInfo: false\n        });\n    }\n    render() {\n        const { name, planet, showInfo, filtered } = this.state;\n        const { loginSuccess } = this.props;\n\n        return (\n            <div className=\"container\">\n                {showInfo ? <ModalInfo planet={planet} hideInfo={this.hideInfo.bind(this)} /> : ''}\n                <div className=\"row\">\n                    <div className=\"col-md-12 userinfo\">\n                        Welcome: {name} {(loginSuccess || JSON.parse(sessionStorage.getItem(\"isLoggedIn\"))) ? <i className=\"fa fa-sign-out\" aria-hidden=\"true\" onClick={this.logout}> Logout </i> : \"\"}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-10 center\">\n                        <input type=\"text\" className=\"form-control\"\n                            placeholder=\"Search planets here\"\n                            onChange={(evt) => {\n                                const val = evt.target.value;\n                                debounce(this.filterList.bind(this, val), 2000)()\n                            }} onBlur={this.lessItems} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-10 center planet-list\">\n                        <div className={`list-group`}>\n                            {filtered ?\n                                (Object.values(filtered).map((val, i) => {\n                                    let fontSize = {\n                                        fontSize: (50 + Number(val.diameter) / 1e3) + 'px'\n                                    };\n                                    let boundItemClick = this.itemClicked.bind(this, val);\n                                    return <a href=\"#\" className=\"list-group-item\" key={i}\n                                        style={fontSize} onClick={boundItemClick}>\n                                        {val.name} <i className=\"fa fa-globe\" aria-hidden=\"true\">\n                                        </i></a>;\n                                })\n                                ) : ''}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => {\n    // const userData = state.get\n    return {\n        userData: state.userData,\n        loginSuccess: state.loginSuccess,\n        logoutSuccess: state.logoutSuccess,\n        planetsData: state.planetsData\n    }\n})(Planets);"]},"metadata":{},"sourceType":"module"}