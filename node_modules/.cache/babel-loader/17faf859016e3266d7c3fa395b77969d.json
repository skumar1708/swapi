{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { AppActions, postLogin } from \"../actions\";\nimport { baseAPIResource } from \"../utils/apiHelper\"; // import { createBrowserHistory } from 'history';\n// const newHistory = createBrowserHistory();\n// function* fetchNews() {\n//   const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=c39a26d9c12f48dba2a5c00e35684ecc')\n//     .then(response => response.json());\n//   yield put({ type: \"NEWS_RECEIVED\", json: json.articles || [{ error: json.message }] });\n// }\n\nfunction* checkLogin(action) {\n  try {\n    const _action$payload = action.payload,\n          username = _action$payload.username,\n          password = _action$payload.password;\n    const response = yield call(baseAPIResource.get, \"people/?search=\".concat(username));\n    const results = response.data.results;\n    const userData = results.length ? results.filter(user => user.birth_year == password) : [];\n    const isValidUser = userData.length;\n\n    if (!isValidUser) {\n      alert(\"Invalid credentials\");\n    } else {\n      yield put(postLogin(userData));\n      yield put(newHistory.push(\"/planets\"));\n    }\n\n    debugger;\n  } catch (e) {\n    console.log(\"Login error: \", e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(AppActions.LOGIN_CLICKED, checkLogin);\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["/Users/sharvankumar/brainstorm/swapi/swapi/src/sagas/index.js"],"names":["put","takeLatest","all","call","AppActions","postLogin","baseAPIResource","checkLogin","action","payload","username","password","response","get","results","data","userData","length","filter","user","birth_year","isValidUser","alert","newHistory","push","e","console","log","actionWatcher","LOGIN_CLICKED","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,YAAtC;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AAAA,4BAC6BA,MAAM,CAACC,OADpC;AAAA,UACMC,QADN,mBACMA,QADN;AAAA,UACgBC,QADhB,mBACgBA,QADhB;AAEF,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACG,eAAe,CAACO,GAAjB,2BAAwCH,QAAxC,EAA3B;AACA,UAAMI,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAcD,OAA9B;AACA,UAAME,QAAQ,GAAGF,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACI,MAAR,CAAeC,IAAI,IAAKA,IAAI,CAACC,UAAL,IAAmBT,QAA3C,CAAjB,GAAyE,EAA1F;AACA,UAAMU,WAAW,GAAGL,QAAQ,CAACC,MAA7B;;AAEA,QAAG,CAACI,WAAJ,EAAiB;AACfC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMtB,GAAG,CAACK,SAAS,CAACW,QAAD,CAAV,CAAT;AAEA,YAAMhB,GAAG,CAACuB,UAAU,CAACC,IAAX,CAAgB,UAAhB,CAAD,CAAT;AACD;;AACD;AACD,GAfD,CAeE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAA7B;AACD;AACF;;AAED,UAAUG,aAAV,GAA0B;AACxB,QAAM3B,UAAU,CAACG,UAAU,CAACyB,aAAZ,EAA2BtB,UAA3B,CAAhB;AACD;;AAGD,eAAe,UAAUuB,QAAV,GAAqB;AAClC,QAAM5B,GAAG,CAAC,CACR0B,aAAa,EADL,CAAD,CAAT;AAGD","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { AppActions, postLogin } from \"../actions\";\nimport { baseAPIResource } from \"../utils/apiHelper\";\n// import { createBrowserHistory } from 'history';\n\n// const newHistory = createBrowserHistory();\n\n// function* fetchNews() {\n\n//   const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=c39a26d9c12f48dba2a5c00e35684ecc')\n//     .then(response => response.json());\n\n//   yield put({ type: \"NEWS_RECEIVED\", json: json.articles || [{ error: json.message }] });\n// }\n\nfunction* checkLogin(action) {\n  try {\n    const { username, password } = action.payload;\n    const response = yield call(baseAPIResource.get, `people/?search=${username}`);\n    const results = response.data.results;\n    const userData = results.length ? results.filter(user => (user.birth_year == password)) : [];\n    const isValidUser = userData.length;\n    \n    if(!isValidUser) {\n      alert(\"Invalid credentials\");\n    } else {\n      yield put(postLogin(userData));\n\n      yield put(newHistory.push(\"/planets\"));\n    }\n    debugger;\n  } catch (e) {\n    console.log(\"Login error: \", e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(AppActions.LOGIN_CLICKED, checkLogin)\n}\n\n\nexport default function* rootSaga() {\n  yield all([\n    actionWatcher(),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}