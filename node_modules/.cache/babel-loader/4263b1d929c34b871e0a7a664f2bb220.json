{"ast":null,"code":"export const createActionTypes = (prefix, actionTypeList) => {\n  const actionTypesObject = {};\n  actionTypeList.forEach(item => {\n    actionTypesObject[item] = \"\".concat(prefix, \"/\").concat(item);\n  });\n  return actionTypesObject;\n};\nexport const debounce = (func, wait, immediate) => {\n  var timeout;\n  return function () {\n    var _ref = [this, arguments],\n        context = _ref[0],\n        args = _ref[1],\n        later = _ref[2];\n\n    later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callnow = immediate && timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callnow) func.apply(context, args);\n  };\n};","map":{"version":3,"sources":["/Users/sharvankumar/brainstorm/swapi/swapi/src/utils/index.js"],"names":["createActionTypes","prefix","actionTypeList","actionTypesObject","forEach","item","debounce","func","wait","immediate","timeout","arguments","context","args","later","apply","callnow","clearTimeout","setTimeout"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,MAAD,EAASC,cAAT,KAA4B;AACzD,QAAMC,iBAAiB,GAAG,EAA1B;AAEAD,EAAAA,cAAc,CAACE,OAAf,CAAwBC,IAAD,IAAU;AAC7BF,IAAAA,iBAAiB,CAACE,IAAD,CAAjB,aAA6BJ,MAA7B,cAAuCI,IAAvC;AACH,GAFD;AAIA,SAAOF,iBAAP;AACH,CARM;AAUP,OAAO,MAAMG,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,SAAb,KAA2B;AAE/C,MAAIC,OAAJ;AACA,SAAO,YAAY;AAAA,eACc,CAAC,IAAD,EAAOC,SAAP,CADd;AAAA,QACVC,OADU;AAAA,QACDC,IADC;AAAA,QACKC,KADL;;AAEfA,IAAAA,KAAK,GAAG,YAAY;AAChBJ,MAAAA,OAAO,GAAG,IAAV;AACA,UAAI,CAACD,SAAL,EAAgBF,IAAI,CAACQ,KAAL,CAAWH,OAAX,EAAoBC,IAApB;AACnB,KAHD;;AAIA,QAAIG,OAAO,GAAGP,SAAS,IAAIC,OAA3B;AACAO,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGQ,UAAU,CAACJ,KAAD,EAAQN,IAAR,CAApB;AACA,QAAIQ,OAAJ,EAAaT,IAAI,CAACQ,KAAL,CAAWH,OAAX,EAAoBC,IAApB;AAChB,GAVD;AAWH,CAdM","sourcesContent":["export const createActionTypes = (prefix, actionTypeList) => {\n    const actionTypesObject = {};\n\n    actionTypeList.forEach((item) => {\n        actionTypesObject[item] = `${prefix}/${item}`;\n    });\n\n    return actionTypesObject;\n};\n\nexport const debounce = (func, wait, immediate) => {\n\n    var timeout;\n    return function () {\n        var [context, args, later] = [this, arguments];\n        later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        }\n        var callnow = immediate && timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callnow) func.apply(context, args);\n    }\n};"]},"metadata":{},"sourceType":"module"}