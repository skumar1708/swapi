{"ast":null,"code":"import { put, takeLatest, all } from 'redux-saga/effects';\nimport { AppActions, onLogin } from \"../actions\"; // function* fetchNews() {\n//   const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=c39a26d9c12f48dba2a5c00e35684ecc')\n//     .then(response => response.json());\n//   yield put({ type: \"NEWS_RECEIVED\", json: json.articles || [{ error: json.message }] });\n// }\n\nfunction* checkLogin(action) {\n  try {\n    const _action$payload = action.payload,\n          username = _action$payload.username,\n          password = _action$payload.password;\n  } catch (e) {\n    console.log(\"Login error: \", e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(AppActions.LOGIN_CLICKED, checkLogin);\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["/Users/sharvankumar/brainstorm/swapi/swapi/src/sagas/index.js"],"names":["put","takeLatest","all","AppActions","onLogin","checkLogin","action","payload","username","password","e","console","log","actionWatcher","LOGIN_CLICKED","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC,C,CAEA;AAEA;AACA;AAEA;AACA;;AAEA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AAAA,4BAC6BA,MAAM,CAACC,OADpC;AAAA,UACMC,QADN,mBACMA,QADN;AAAA,UACgBC,QADhB,mBACgBA,QADhB;AAEH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAA7B;AACD;AACF;;AAED,UAAUG,aAAV,GAA0B;AACxB,QAAMZ,UAAU,CAACE,UAAU,CAACW,aAAZ,EAA2BT,UAA3B,CAAhB;AACD;;AAGD,eAAe,UAAUU,QAAV,GAAqB;AAClC,QAAMb,GAAG,CAAC,CACRW,aAAa,EADL,CAAD,CAAT;AAGD","sourcesContent":["import { put, takeLatest, all } from 'redux-saga/effects';\nimport { AppActions, onLogin } from \"../actions\";\n\n// function* fetchNews() {\n\n//   const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=c39a26d9c12f48dba2a5c00e35684ecc')\n//     .then(response => response.json());\n\n//   yield put({ type: \"NEWS_RECEIVED\", json: json.articles || [{ error: json.message }] });\n// }\n\nfunction* checkLogin(action) {\n  try {\n    const { username, password } = action.payload;\n  } catch (e) {\n    console.log(\"Login error: \", e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(AppActions.LOGIN_CLICKED, checkLogin)\n}\n\n\nexport default function* rootSaga() {\n  yield all([\n    actionWatcher(),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}