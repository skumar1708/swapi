{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { AppActions, postLogin, postLogout } from \"../actions\";\nimport { baseAPIResource } from \"../utils/apiHelper\";\nimport { createBrowserHistory } from 'history';\nconst newHistory = createBrowserHistory(); // function* fetchNews() {\n//   const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=c39a26d9c12f48dba2a5c00e35684ecc')\n//     .then(response => response.json());\n//   yield put({ type: \"NEWS_RECEIVED\", json: json.articles || [{ error: json.message }] });\n// }\n\nfunction* doLoginAndGetData(action) {\n  try {\n    const _action$payload = action.payload,\n          username = _action$payload.username,\n          password = _action$payload.password;\n    const response = yield call(baseAPIResource.get, \"people/?search=\".concat(username));\n    const results = response.data.results;\n    const userData = results.length ? results.filter(user => {\n      const name = user.name,\n            birth_year = user.birth_year;\n      return birth_year == password && name.toLowerCase() == username.toLowerCase();\n    }) : [];\n    const isValidUser = userData.length;\n\n    if (!isValidUser) {\n      alert(\"Invalid credentials\");\n    } else {\n      yield put(postLogin(userData)); // yield put(newHistory.push(\"/planets\"));\n    }\n\n    debugger;\n  } catch (e) {\n    console.log(\"Login error: \", e);\n  }\n}\n\nfunction* doLogout() {\n  try {\n    yield put(postLogout());\n  } catch (e) {\n    console.log(\"Logout error: \", e);\n  }\n}\n\nfunction* searchPlanets(action) {\n  try {\n    const param = action.payload.param;\n    const response = yield call(baseAPIResource.get, \"planets/?search=\".concat(param));\n    const results = response.data.results;\n    debugger;\n  } catch (e) {\n    console.log(\"Logout error: \", e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(AppActions.LOGIN_CLICKED, doLoginAndGetData);\n  yield takeLatest(AppActions.LOGOUT_CLICKED, doLogout);\n  yield takeLatest(AppActions.GET_PLANATES, searchPlanets);\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["/Users/sharvankumar/brainstorm/swapi/swapi/src/sagas/index.js"],"names":["put","takeLatest","all","call","AppActions","postLogin","postLogout","baseAPIResource","createBrowserHistory","newHistory","doLoginAndGetData","action","payload","username","password","response","get","results","data","userData","length","filter","user","name","birth_year","toLowerCase","isValidUser","alert","e","console","log","doLogout","searchPlanets","param","actionWatcher","LOGIN_CLICKED","LOGOUT_CLICKED","GET_PLANATES","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,QAAkD,YAAlD;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,MAAMC,UAAU,GAAGD,oBAAoB,EAAvC,C,CAEA;AAEA;AACA;AAEA;AACA;;AAEA,UAAUE,iBAAV,CAA4BC,MAA5B,EAAoC;AAClC,MAAI;AAAA,4BAC6BA,MAAM,CAACC,OADpC;AAAA,UACMC,QADN,mBACMA,QADN;AAAA,UACgBC,QADhB,mBACgBA,QADhB;AAEF,UAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACI,eAAe,CAACS,GAAjB,2BAAwCH,QAAxC,EAA3B;AACA,UAAMI,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAcD,OAA9B;AACA,UAAME,QAAQ,GAAGF,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACI,MAAR,CAAeC,IAAI,IAAI;AAAA,YAC/CC,IAD+C,GAC1BD,IAD0B,CAC/CC,IAD+C;AAAA,YACzCC,UADyC,GAC1BF,IAD0B,CACzCE,UADyC;AAEvD,aAAQA,UAAU,IAAIV,QAAf,IAA6BS,IAAI,CAACE,WAAL,MAAsBZ,QAAQ,CAACY,WAAT,EAA1D;AACD,KAHiC,CAAjB,GAGZ,EAHL;AAIA,UAAMC,WAAW,GAAGP,QAAQ,CAACC,MAA7B;;AAEA,QAAI,CAACM,WAAL,EAAkB;AAChBC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAM3B,GAAG,CAACK,SAAS,CAACc,QAAD,CAAV,CAAT,CADK,CAGL;AACD;;AACD;AACD,GAlBD,CAkBE,OAAOS,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAA7B;AACD;AACF;;AAED,UAAUG,QAAV,GAAqB;AACnB,MAAI;AACF,UAAM/B,GAAG,CAACM,UAAU,EAAX,CAAT;AACD,GAFD,CAEE,OAAOsB,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,CAA9B;AACD;AACF;;AAED,UAAUI,aAAV,CAAwBrB,MAAxB,EAAgC;AAC9B,MAAI;AAAA,UACMsB,KADN,GACgBtB,MAAM,CAACC,OADvB,CACMqB,KADN;AAEF,UAAMlB,QAAQ,GAAG,MAAMZ,IAAI,CAACI,eAAe,CAACS,GAAjB,4BAAyCiB,KAAzC,EAA3B;AACA,UAAMhB,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAcD,OAA9B;AACA;AACD,GALD,CAKE,OAAOW,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,CAA9B;AACD;AACF;;AAED,UAAUM,aAAV,GAA0B;AACxB,QAAMjC,UAAU,CAACG,UAAU,CAAC+B,aAAZ,EAA2BzB,iBAA3B,CAAhB;AACA,QAAMT,UAAU,CAACG,UAAU,CAACgC,cAAZ,EAA4BL,QAA5B,CAAhB;AACA,QAAM9B,UAAU,CAACG,UAAU,CAACiC,YAAZ,EAA0BL,aAA1B,CAAhB;AACD;;AAGD,eAAe,UAAUM,QAAV,GAAqB;AAClC,QAAMpC,GAAG,CAAC,CACRgC,aAAa,EADL,CAAD,CAAT;AAGD","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { AppActions, postLogin, postLogout } from \"../actions\";\nimport { baseAPIResource } from \"../utils/apiHelper\";\nimport { createBrowserHistory } from 'history';\n\nconst newHistory = createBrowserHistory();\n\n// function* fetchNews() {\n\n//   const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=c39a26d9c12f48dba2a5c00e35684ecc')\n//     .then(response => response.json());\n\n//   yield put({ type: \"NEWS_RECEIVED\", json: json.articles || [{ error: json.message }] });\n// }\n\nfunction* doLoginAndGetData(action) {\n  try {\n    const { username, password } = action.payload;\n    const response = yield call(baseAPIResource.get, `people/?search=${username}`);\n    const results = response.data.results;\n    const userData = results.length ? results.filter(user => {\n      const { name, birth_year } = user;\n      return (birth_year == password) && (name.toLowerCase() == username.toLowerCase());\n    }) : [];\n    const isValidUser = userData.length;\n\n    if (!isValidUser) {\n      alert(\"Invalid credentials\");\n    } else {\n      yield put(postLogin(userData));\n\n      // yield put(newHistory.push(\"/planets\"));\n    }\n    debugger;\n  } catch (e) {\n    console.log(\"Login error: \", e);\n  }\n}\n\nfunction* doLogout() {\n  try {\n    yield put(postLogout());\n  } catch (e) {\n    console.log(\"Logout error: \", e);\n  }\n}\n\nfunction* searchPlanets(action) {\n  try {\n    const { param } = action.payload;\n    const response = yield call(baseAPIResource.get, `planets/?search=${param}`);\n    const results = response.data.results;\n    debugger;\n  } catch (e) {\n    console.log(\"Logout error: \", e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(AppActions.LOGIN_CLICKED, doLoginAndGetData);\n  yield takeLatest(AppActions.LOGOUT_CLICKED, doLogout);\n  yield takeLatest(AppActions.GET_PLANATES, searchPlanets);\n}\n\n\nexport default function* rootSaga() {\n  yield all([\n    actionWatcher(),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}