{"ast":null,"code":"var _jsxFileName = \"/Users/sharvankumar/brainstorm/swapi/swapi/src/components/Planets.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport { connect } from \"react-redux\";\nimport ModalInfo from './Modal';\nimport { debounce, checkLoginStatus } from \"../utils\";\nimport { onLogout, getPlanets } from \"../actions\";\n\nclass Planets extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.componentWillMount = () => {\n      const _props2 = props,\n            userData = _props2.userData;\n\n      if (checkLoginStatus() && !userData) {\n        const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n      }\n    };\n\n    this.logout = () => {\n      const dispatch = this.props.dispatch;\n      dispatch(onLogout());\n    };\n\n    const _userData = _props.userData,\n          planetsData = _props.planetsData;\n    this.state = {\n      filtered: planetsData || [{\n        name: 'No Data Found'\n      }],\n      name: _userData ? _userData[0].name : \"\"\n    };\n  }\n\n  // componentDidMount() {\n  //     this.setState({\n  //         // planets: this.props.data,\n  //         filtered: this.props.data || [],\n  //         showInfo: false\n  //     });\n  // }\n  filterList(param) {\n    const dispatch = this.props.dispatch;\n    dispatch(getPlanets({\n      param\n    }));\n  }\n\n  lessItems(event) {// if (!event.currentTarget.value) this.setState({ filtered: [] });\n  }\n\n  itemClicked(planet) {\n    this.setState({\n      showInfo: true,\n      planet: planet\n    });\n  }\n\n  hideInfo() {\n    this.setState({\n      showInfo: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          planet = _this$state.planet,\n          showInfo = _this$state.showInfo,\n          filtered = _this$state.filtered;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, showInfo ? React.createElement(ModalInfo, {\n      planet: planet,\n      hideInfo: this.hideInfo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : '', React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 userinfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Welcome: \", name, React.createElement(\"i\", {\n      className: \"fa fa-sign-out\",\n      \"aria-hidden\": \"true\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Logout \"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search planets here\",\n      onChange: evt => {\n        const val = evt.target.value;\n        return debounce(this.filterList.bind(this, val), 2000)();\n      },\n      onBlur: this.lessItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 center planet-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, filtered ? Object.values(filtered).map((val, i) => {\n      let fontSize = {\n        fontSize: 50 + Number(val.diameter) / 1e3 + 'px'\n      };\n      let boundItemClick = this.itemClicked.bind(this, val);\n      return React.createElement(\"a\", {\n        href: \"#\",\n        className: \"list-group-item\",\n        key: i,\n        style: fontSize,\n        onClick: boundItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, val.name, \" \", React.createElement(\"i\", {\n        className: \"fa fa-globe\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }) : ''))));\n  }\n\n}\n\nPlanets.getDerivedStateFromProps = (props, state) => {\n  const loginSuccess = props.loginSuccess,\n        history = props.history,\n        planetsData = props.planetsData;\n\n  if (!loginSuccess) {\n    history.push(\"/login\");\n  }\n\n  return {\n    filtered: planetsData\n  };\n};\n\nexport default connect(state => {\n  // const userData = state.get\n  return {\n    userData: state.userData,\n    loginSuccess: state.loginSuccess,\n    planetsData: state.planetsData\n  };\n})(Planets);","map":{"version":3,"sources":["/Users/sharvankumar/brainstorm/swapi/swapi/src/components/Planets.js"],"names":["React","Component","connect","ModalInfo","debounce","checkLoginStatus","onLogout","getPlanets","Planets","constructor","props","componentWillMount","userData","JSON","parse","sessionStorage","getItem","logout","dispatch","planetsData","state","filtered","name","filterList","param","lessItems","event","itemClicked","planet","setState","showInfo","hideInfo","render","bind","evt","val","target","value","Object","values","map","i","fontSize","Number","diameter","boundItemClick","getDerivedStateFromProps","loginSuccess","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport { connect } from \"react-redux\";\nimport ModalInfo from './Modal';\nimport { debounce, checkLoginStatus } from \"../utils\"\nimport { onLogout, getPlanets } from \"../actions\";\n\nclass Planets extends Component {\n\n    constructor(props) {\n        super(props);\n        const { userData, planetsData } = props;\n        this.state = {\n            filtered: planetsData || [{ name: 'No Data Found' }],\n            name: userData ? userData[0].name : \"\"\n        }\n    }\n\n    componentWillMount = () => {\n        const { userData } = props;\n        if (checkLoginStatus() && !userData) {\n            const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n        }\n    };\n\n    static getDerivedStateFromProps = (props, state) => {\n        const { loginSuccess, history, planetsData } = props;\n        if (!loginSuccess) {\n            history.push(\"/login\")\n        }\n        return {\n            filtered: planetsData\n        };\n    };\n\n    // componentDidMount() {\n    //     this.setState({\n    //         // planets: this.props.data,\n    //         filtered: this.props.data || [],\n    //         showInfo: false\n    //     });\n    // }\n\n    filterList(param) {\n        const { dispatch } = this.props;\n        dispatch(getPlanets({ param }));\n    }\n\n    lessItems(event) {\n        // if (!event.currentTarget.value) this.setState({ filtered: [] });\n    }\n\n    logout = () => {\n        const { dispatch } = this.props;\n        dispatch(onLogout());\n    };\n\n    itemClicked(planet) {\n        this.setState({\n            showInfo: true,\n            planet: planet\n        });\n    }\n\n    hideInfo() {\n        this.setState({\n            showInfo: false\n        });\n    }\n    render() {\n        const { name, planet, showInfo, filtered } = this.state;\n\n        return (\n            <div className=\"container\">\n                {showInfo ? <ModalInfo planet={planet} hideInfo={this.hideInfo.bind(this)} /> : ''}\n                <div className=\"row\">\n                    <div className=\"col-md-12 userinfo\">\n                        Welcome: {name}<i className=\"fa fa-sign-out\" aria-hidden=\"true\" onClick={this.logout}> Logout </i>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-10 center\">\n                        <input type=\"text\" className=\"form-control\"\n                            placeholder=\"Search planets here\"\n                            onChange={(evt) => {\n                                const val = evt.target.value;\n                                return debounce(this.filterList.bind(this, val), 2000)()\n                            }} onBlur={this.lessItems} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-10 center planet-list\">\n                        <div className={`list-group`}>\n                            {filtered ?\n                                (Object.values(filtered).map((val, i) => {\n                                    let fontSize = {\n                                        fontSize: (50 + Number(val.diameter) / 1e3) + 'px'\n                                    };\n                                    let boundItemClick = this.itemClicked.bind(this, val);\n                                    return <a href=\"#\" className=\"list-group-item\" key={i}\n                                        style={fontSize} onClick={boundItemClick}>\n                                        {val.name} <i className=\"fa fa-globe\" aria-hidden=\"true\">\n                                        </i></a>;\n                                })\n                                ) : ''}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => {\n    // const userData = state.get\n    return {\n        userData: state.userData,\n        loginSuccess: state.loginSuccess,\n        planetsData: state.planetsData\n    }\n})(Planets);"]},"metadata":{},"sourceType":"module"}